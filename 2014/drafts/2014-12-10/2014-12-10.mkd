Title:    Nginx + uWSGI 같이 사용하기
Package:  Seoul.pm
Category: perl
Category: Seoul.pm
Author:   JellyPo


저자
-----

[@JellyPooo][twitter-JellyPooo] - 짤방 수집가.


시작하며
---------
2012년 펄 워크샵 때 [@yuni_kim][twitter-yuni_kim] 님이 발표하신 [Perl을 위한 Web App 실행 환경 꾸미기][kpw2012_uwsgi] 을 [Ubuntu][ubuntu] 14.04에서 직접 적용한 내용입니다.

준비물
-----
 - Ubuntu 14.04
 - perlbrew 환경
 - Nginx 패키지 설치
 - uWSGI 컴파일 설치

HTTP 서버랑 웹 앱 서버랑 왜 분리하죠?
-------------------------------------
정적 웹 페이지(Static web page)와 Dynamic web page 가 있다고 가정합시다(정확한 용어인지 자신이 없네요.).

정적/동적의 기준은 사용자가 웹 브라우저에서 볼 때가 아니라, 서버에서 제공하는 파일의 상태를 뜻합니다.

HTML, GIF, JPG, PNG 등의 파일은 서버 관리자(개발자)가 변경하지 않는 한 변경점이 없습니다.

하지만 검색 페이지 등은 고정된 내용이 없죠. 사용자가 요청하면 - 서버에서 DB를 검색해서 결과를 받아오고 - 그걸 다시 HTML 태그를 씌워서 사용자에게 보내줘야 하죠.

단순 파일 전송을 하는데 웹 앱 서버를 쓰는 것은 좀 아깝다 싶어 따로 분리하는게 아닌가 싶네요. Nginx가 단순 파일 전송에 강점이 있다고 하니...

따로 벤치마크 등을 하진 않았습니다. 좋다고 하니까 그냥 uwsgi랑 Nginx를 써본거라 ...저는 이 설정을 잘못 해서 웹 데몬과 웹 앱 양쪽에서 파일 전송을 하고 있었습니다........ 아....

uWSGI 실행
---------
Nginx와 uWSGI간 통신은 UNIX Socket 으로 하게 합니다. 이 편이 성능이 좀 더 낫다고 합니다. 물론 이 경우는 웹 데몬과 웹 앱 서버가 같은 곳에 있을 때이고, TCP 소켓을 써야할 수도 있습니다.

아래 설정의 uwsgi 실행파일 위치를 보시면 알겠지만 직접 컴파일한 바이너리로 실행 중입니다. Ubuntu 패키지로도 있습니다...만 패키지 설치시 perlbrew 환경도 지원 되는지 모르겠네요.


저는 [nginx & uwsgi(psgi) & perlbrew & mojolicious][ref01]를 수정해서 uWSGI를 실행 중입니다.

	#!bash
	# $ mojo generate app Service1
	SERVICE_ROOT=/home/jellypo/src/MyDancer
	SERVICE_SCRIPT="$SERVICE_ROOT/bin/app.pl"
	NAME=uwsgi
	DESC=uwsgi
	
	# uWSGI собирать при соответсвующем Перле!!!
	# $ perlbrew use perl-5.16.2
	# $ curl http://uwsgi.it/install | bash -s psgi ~/uwsgi-perl-5.16.2
	DAEMON=/usr/local/bin/uwsgi/uwsgi
	LOG="$SERVICE_ROOT/logs/$NAME.log"
	PID_FILE="$SERVICE_ROOT/$NAME.pid"
	SOCK="/tmp/uwsgi.sock"
	NUM_SOCK=1 # сверь с uwsgi_pass/upstream nginx.conf, циферка в названии файла сокета в конце
	THIS=$0
	ACTION=$1
		
	uwsgi --psgi $SERVICE_SCRIPT --enable-threads --processes=8 --master  --daemonize=    $LOG --pidfile=$PID_FILE --uwsgi-socket=$SOCK.$NUM_SOCK

Nginx 설정
---------
Nginx 설정파일 /etc/nginx/sites-enabled/deafult 파일 server 블럭 안에 아래 내용을 추가 합니다. 아래와 같이 설정할 경우 http://myhost/jjal 에 접속시 Nginx에서 처리하는 것이 아닌 uWSGI로 요청을 넘겨주게 됩니다.


	#!vim
        location /jjal {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #try_files $uri $uri/ /index.html;
                # Uncomment to enable naxsi on this location
                # include /etc/nginx/naxsi.rules
                include uwsgi_params;
                uwsgi_pass unix:/tmp/uwsgi.sock.1;
                # uwsgi_pass 127.0.0.1:3000;
                uwsgi_modifier1 5;
                root /home/JellyPo/src/MyDancer/;
        }

include uwsgi_params 란 내용이 있는걸로 보아 uwsgi_params 파일을 만들어야겠네요. /etc/nginx/uwsgi_prams 에 아래 내용을 채워넣습니다

	#!vim
	uwsgi_param     QUERY_STRING            $query_string;
	uwsgi_param     REQUEST_METHOD          $request_method;
	uwsgi_param     CONTENT_TYPE            $content_type;
	uwsgi_param     CONTENT_LENGTH          $content_length;
	
	uwsgi_param     REQUEST_URI             $request_uri;
	uwsgi_param     PATH_INFO               $document_uri;
	uwsgi_param     DOCUMENT_ROOT           $document_root;
	uwsgi_param     SERVER_PROTOCOL         $server_protocol;
	uwsgi_param     UWSGI_SCHEME            $scheme;
	
	uwsgi_param     REMOTE_ADDR             $remote_addr;
	uwsgi_param     REMOTE_PORT             $remote_port;
	uwsgi_param     SERVER_PORT             $server_port;
	uwsgi_param     SERVER_NAME             $server_name;

웹 앱에서 경로 설정은 어떻게 하나?
----------------------------------
위의 설정대로 하게 되면 http://myhost/jjal 로 접속하게 되면 웹 앱이 응답을 하게 됩니다.

그럼 웹 앱에서 경로 처리시 /jjal 경로는 / 가 되는걸까요?

결론적으로 아닙니다. 웹 앱 내부에서 경로 처리도 /jjal 로 해야 합니다.

제가 만든 짤방 뷰어는 처음에 http://myhost/ 로 접속하면 볼 수 있도록 만들었는데, jjal로 경로를 바꾼 뒤 짤방 뷰어 소스에서 / 로 시작하던 경로를 전부 /jjal 로 시작하도록 수정해야 했습니다.

	#!perl
	get '/jjal/' => sub {
	#get '/' => require_login sub {
	    template 'index';
	};
	
	get '/jjal/:site/?' => require_login sub {
	...
	};

또한 [perl Auth::Extensible 기본 경로 변경 시 로그인 경로 설정][ref02] 로그인 처리를 위한 환경 설정도 바꿨었네요.

Nginx 설정파일에서 /jjal 경로를 다른 곳으로 바꾸게 되면 웹 앱 소스는 물론 웹 앱 환경설정까지 수정해야 함에 주의하세요.

정리하며
---------
여기까지 읽어보셨다면 아시겠지만, 이 글을 쓴 JellyPooo는 '좋다'는 성능을 찾아 헤매지만 그 검증 과정(벤치마크)은 제대로 거치지 않고 그저 좋다던 뭔가의 신기술을 적용했다는 것에 만족을 느끼고 마는 사람입니다. 그래서 이 기사가 얼마나 도움이 될지 좀 의문이 있네요...

뱀발 - crontab 실행 시 bash 환경설정 적용
----------------------------------------
이대로 기사를 송고하려니 내용이 너무 적은 것 같아 다른 팁을 추가합니다.

[매일매일 네이버 카페 출석 체크하기!][ref03] 스크립트를 crontab -e 에 추가해 실행하려 했더니, 직접 실행 할 때는 잘 동작하던 스크립트가 cron에서 실행할 때는 정상 동작 하지 않는 것을 확인했습니다.

네이버 아이디와 패스워드를 .bash_passwd 란 파일을 따로 만들어 넣어두고, 거기서 읽어들이도록 수정한 이후부터 안 되더군요. 이전까지는 실행 파일에 아이디와 패스워드가 적혀 있었습니다.

	#!perl
	$res = $mech->submit_form(
	    form_name => 'frmNIDLogin',
	    fields    => {
	        id => "$ENV{NAVER_ID}",
	        pw => "$ENV{NAVER_PW}",
	    },
	);
	
위 소스에서 id와 pw를 $ENV에서 불러들이는 것을 확인하실 수 있습니다.

안되는 이유는, cron에서 실행 시 사용자 환경을 완전히 무시하고 없는 것으로 한다고 합니다([참조][ref04]). 전 그걸 모르고 아래와 같은 방법들을 썼거든요

	#!bash
	* */2 * * * source /home/user/.bash_profile; <command>

	#!bash
	* */2 * * * bash -c "<command>"

	#!bash
	* */2 * * * sudo -i jellypo "<command>"

전 그냥 쉘 스크립트([perlbrew-cron][ref04])로 실행하고, 그 쉘 스크립트에서 .bash_passwd 파일을 읽어들이(source .bash_passwd)는 방법으로 해결했습니다.

	#!bash
	01 */2 * * * /home/jellypo/bin/cron-perlbrew.sh --with perl-5.20 /home/jellypo/web/strip/naver_cafe.pl

여기서 설명한 환경설정 무시는 Ubuntu 만의 cron 동작일 수 있습니다.

_EOT_


[twitter-JellyPooo]:                  http://twitter.com/#!/JellyPooo
[twitter-yuni_kim]:                  http://twitter.com/#!/yuni_kim
[kpw2012_uwsgi]:	https://docs.google.com/presentation/pub?id=116VQT--oCOLDKaGktjVJLhoejBv3_5cVvsIjjVCSkR0&start=false&loop=false&delayms=3000#slide=id.p
[ubuntu]:		http://www.ubuntu.com/
[ref01]:		https://github.com/kraih/mojo/wiki/nginx-&-uwsgi%28psgi%29-&-perlbrew-&-mojolicious
[ref02]:		http://mini.jellypo.pe.kr/wp/?p=613
[ref03]:		http://advent.perl.kr/2010/2010-12-07.html
[ref04]:		http://stackoverflow.com/questions/415403/whats-the-difference-between-bashrc-bash-profile-and-environment
[ref05]:		https://github.com/agorman/perlbrew-cron
